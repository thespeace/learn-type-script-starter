/*TypeScript는 JavaScript에서 확장된 언어로 컴파일 언어라고 생각하고 보면 이해가 편합니다.*/

{
  "include" : [ "src" ], /*자바스크립트로 컴파일하고 싶은 모든 디텍토리를 넣어줍니다. 해당 설정에선 타입스크립트가 src의 모든 파일을 확인한다는 것을 의미합니다.*/
  "compilerOptions": {
    "outDir" : "build", /*outDir은 자바스크립트 파일이 생성될 디렉토리를 지정할 수 있습니다. 해당 설정에선 build라는 폴더에 ts로 인해 만들어진 js파일을 넣으라고 지정한 것입니다.*/
    "esModuleInterop" : true,
    "target" : "ES6", /*target은 어떤 버전의 js로 컴파일할지를 지정할 수 있습니다. 해당 설정에선 es6를 이상적이라 생각하고 사용했습니다.(Node.js 와 브라우저와의 호환성이 좋기때문)*/
    "lib" : ["ES6","dom"], /* 타입스크립트의 코드가 어떤 api를 사용하고, 어떤 구동 환경인지를 정의할 수 있습니다.(무엇을 목적으로 설계하는지) 해당 설정에선 "DOM"으로 설정하면 브라우저에서 작동한다는 것을 알려줘서 자동완성 및 IDEA를 잘 확용하여 프로그래밍 할 수 있게 설정했습니다. 한마디로 통합된 라이브러리의 정의 파일을 지정할 수 있습니다.*/
    "strict" : true, /*모든 엄격한 타입 검사 옵션을 활성화합니다. strict 플래그는 프로그램 정확성을 더 강력하게 보장하는 광범위한 타입 검사 동작을 가능하게 합니다.
                      Declaration Files가 없는 경우에 대해서도 에러를 띄워줍니다.*/
    "allowJs" : true /* js파일이 엄청 크거나 코드가 많다면 그대로 사용하는 것도 가능하다. 호출 시그니처를 추론해서 가져와서 사용할 수 있게 된다! */
  }
}
